{"version":3,"sources":["webpack:///./src/styles/fonts.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PostDate.js","webpack:///./src/styles/colors.js","webpack:///./src/pages/index.js"],"names":["css","fontBody","fontDisplay","Header","styled","header","Footer","footer","LargeHeader","div","to","src","require","alt","width","height","RegularHeader","style","padding","Layout","location","children","title","isRootPath","pathname","SiteContainer","className","PostDate","Title","h1","ListingTitle","h3","pageQuery","article","PodcastIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","MetaTags","map","node","frontmatter","fields","slug","number","key","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"+iBAE0BA,YAAH,KAAhB,IAIMC,EAAWD,YAAH,KAIRE,EAAcF,YAAH,K,ufCLxB,IAAMG,EAASC,IAAOC,OAAV,KAONC,EAASF,IAAOG,OAAV,KAaNC,GANgBJ,IAAOK,IAAV,KAMC,kBAChB,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMO,GAAE,KACJ,yBAAKC,IAAKC,EAAQ,QACVC,IAAI,iEACJC,MAAO,IACPC,OAAQ,UAKtBC,EAAgB,kBAClB,kBAACb,EAAD,CAAQc,MAAO,CAAEC,QAAS,SACtB,kBAAC,IAAD,CAAMR,GAAE,KACJ,yBAAKC,IAAKC,EAAQ,QACVC,IAAI,iEACJC,MAAO,IACPC,OAAQ,SA0BbI,EArBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBC,MAAsB,EAAfD,UAEzBE,EADQ,MACKH,EAASI,SAE5B,OACI,kBAACC,EAAA,EAAD,KACKF,EACG,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEJ,yBAAKG,UAAU,kBACVL,GAEL,kBAACf,EAAD,KACI,yBAAKK,IAAKC,EAAQ,QAAqBE,MAAO,IAAKC,OAAQ,Q,mOC1D3E,IAQeY,EAREvB,IAAOK,IAAV,IACRR,ECH6B,W,6WCOnC,IAAM2B,EAAQxB,IAAOyB,GAAV,IACL3B,GAIA4B,EAAe1B,IAAO2B,GAAV,IACZ7B,GA+EO8B,GA3EO5B,IAAO6B,QAAV,KAyEFC,UArEM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMf,EAAe,EAAfA,SACpBgB,EAAYD,EAAKE,KAAKC,aAAahB,MACnCiB,EAAQJ,EAAKK,kBAAkBC,MAErC,OACI,kBAAC,EAAD,CAAQrB,SAAUA,EAAUE,MAAOc,GAC/B,kBAACM,EAAA,EAAD,MAEA,kBAACd,EAAD,iBAICW,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJtB,EAAQsB,EAAKC,YAAYvB,OAASsB,EAAKE,OAAOC,KAC9CC,EAASJ,EAAKC,YAAYG,OAEhC,OACI,6BAAStB,UAAU,eAAeuB,IAAKL,EAAKE,OAAOC,MAC/C,gCACI,kBAACjB,EAAD,KACI,kBAAC,IAAD,CAAMpB,GAAIkC,EAAKE,OAAOC,MAAOzB,IAEjC,kBAAC,EAAD,KAAWsB,EAAKC,YAAYK,KAA5B,cAA6CF,IAGjD,iCACI,uBACIG,wBAAyB,CACrBC,OACIR,EAAKC,YAAYQ,aACjBT,EAAKU,gBAQjC,6BAEA,kBAAC1B,EAAD,kBAIA,4BACI,mCACA,sCACA,4CAGJ,6BAEA,kBAACA,EAAD,eAIA,4BACI,2CACA,2CACA,6CACA,0CAGJ,+BAQU","file":"component---src-pages-index-js-a8a42d7e4b57ff38f237.js","sourcesContent":["import { css } from 'styled-components';\n\nexport const fontImport = css`\n    @import url('https://fonts.googleapis.com/css?family=Lato:400,400i,700');\n`;\n\nexport const fontBody = css`\n    font-family: 'Lato', sans-serif;\n`;\n\nexport const fontDisplay = css`\n    font-family: 'Lato', sans-serif;\n    font-weight: 700;\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport SiteContainer from './SiteContainer';\n\nconst Header = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n`;\n\nconst Footer = styled.footer`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n`;\n\nconst MainContainer = styled.div`\n    width: 60vw;\n    max-width: 40rem;\n    margin: 1rem auto;\n`;\n\nconst LargeHeader = () => (\n    <Header>\n        <Link to={`/`}>\n            <img src={require('./nge-logo.svg')}\n                    alt=\"Not Good Enough — Inadequate responses to Inadequate responses\"\n                    width={260}\n                    height={260} />\n        </Link>\n    </Header>\n);\n\nconst RegularHeader = () => (\n    <Header style={{ padding: '2rem' }}>\n        <Link to={`/`}>\n            <img src={require('./nge-logotype.svg')}\n                    alt=\"Not Good Enough — Inadequate responses to Inadequate responses\"\n                    width={200}\n                    height={100} />\n        </Link>\n    </Header>\n);\n\nconst Layout = ({ location, title, children }) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const isRootPath = location.pathname === rootPath;\n\n    return (\n        <SiteContainer>\n            {isRootPath ? (\n                <LargeHeader />\n            ) : (\n                <RegularHeader />\n            )}\n            <div className=\"main-container\">\n                {children}\n            </div>\n            <Footer>\n                <img src={require('./nge-banner.svg')} width={234} height={84} />\n            </Footer>\n        </SiteContainer>\n    );\n}\n\nexport default Layout;\n","import styled from 'styled-components';\nimport { fontImport, fontBody, fontDisplay } from '../styles/fonts';\nimport * as colors from '../styles/colors';\n\nconst PostDate = styled.div`\n    ${fontBody};\n    font-size: 0.8rem;\n    text-transform: uppercase;\n    margin: 0.3rem 0;\n    color: ${colors.foregroundSecondary};\n`;\n\nexport default PostDate;\n","\nexport const foreground = '#000000';\nexport const foregroundSecondary = '#555555';\n\nexport const accentPrimary = '#ff0000';\nexport const accentSecondary = '#4753A4';\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { fontDisplay } from '../styles/fonts';\n\nimport Layout from '../components/Layout';\nimport MetaTags from '../components/MetaTags';\nimport PostDate from '../components/PostDate';\n\nconst Title = styled.h1`\n    ${fontDisplay}\n    margin: 1rem 0;\n`;\n\nconst ListingTitle = styled.h3`\n    ${fontDisplay}\n    font-size: 1.2rem;\n`;\n\nconst ListingItem = styled.article`\n    margin-bottom: 1rem;\n`;\n\nconst PodcastIndex = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <MetaTags />\n\n            <Title>\n                Episodes\n            </Title>\n\n            {posts.map(({ node }) => {\n                const title = node.frontmatter.title || node.fields.slug;\n                const number = node.frontmatter.number;\n\n                return (\n                    <article className=\"listing-item\" key={node.fields.slug}>\n                        <header>\n                            <ListingTitle>\n                                <Link to={node.fields.slug}>{title}</Link>\n                            </ListingTitle>\n                            <PostDate>{node.frontmatter.date} • Episode {number}</PostDate>\n                        </header>\n\n                        <section>\n                            <p\n                                dangerouslySetInnerHTML={{\n                                    __html:\n                                        node.frontmatter.description ||\n                                        node.excerpt,\n                                }}\n                            />\n                        </section>\n                    </article>\n                );\n            })}\n\n            <hr />\n\n            <Title>\n                Subscribe\n            </Title>\n\n            <ul>\n                <li>RSS</li>\n                <li>iTunes</li>\n                <li>PocketCasts</li>\n            </ul>\n\n            <hr />\n\n            <Title>\n                Follow\n            </Title>\n\n            <ul>\n                <li>@notgoodpod</li>\n                <li>@langaround</li>\n                <li>@philosophica</li>\n                <li>@mccclean</li>\n            </ul>\n\n            <hr />\n\n        </Layout>\n    );\n};\n\nexport default PodcastIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        number\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}
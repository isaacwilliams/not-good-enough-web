{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/PostDate.js","webpack:///./src/pages/index.js"],"names":["Header","styled","header","Footer","footer","MainContainer","div","LargeHeader","to","src","require","alt","width","height","RegularHeader","style","padding","Layout","location","children","title","isRootPath","pathname","SiteContainer","PostDate","fontBody","colors","Title","h1","fontDisplay","ListingTitle","h3","ListingItem","article","pageQuery","PodcastIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","MetaTags","map","node","frontmatter","fields","slug","number","key","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"spBAKA,IAAMA,EAASC,IAAOC,OAAV,KAONC,EAASF,IAAOG,OAAV,KAONC,EAAgBJ,IAAOK,IAAV,KAMbC,EAAc,kBAChB,kBAACP,EAAD,KACI,kBAAC,IAAD,CAAMQ,GAAE,KACJ,yBAAKC,IAAKC,EAAQ,QACVC,IAAI,iEACJC,MAAO,IACPC,OAAQ,SAKtBC,EAAgB,kBAClB,kBAACd,EAAD,CAAQe,MAAO,CAAEC,QAAS,SACtB,kBAAC,IAAD,CAAMR,GAAE,KACJ,yBAAKC,IAAKC,EAAQ,QACVC,IAAI,iEACJC,MAAO,IACPC,OAAQ,SA4BbI,EAvBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBC,MAAsB,EAAfD,UAEzBE,EADQ,MACKH,EAASI,SAE5B,OACI,kBAACC,EAAA,EAAD,KACI,gCACKF,EACG,kBAAC,EAAD,MAEA,kBAAC,EAAD,OAGR,kBAAChB,EAAD,KACKc,GAEL,kBAAChB,EAAD,KACI,yBAAKM,IAAKC,EAAQ,QAAqBE,MAAO,IAAKC,OAAQ,Q,+OC5D3E,IAQeW,EAREvB,IAAOK,IAAV,IACRmB,IAIOC,K,6WCAb,IAAMC,EAAQ1B,IAAO2B,GAAV,IACLC,KAIAC,EAAe7B,IAAO8B,GAAV,IACZF,KAIAG,EAAc/B,IAAOgC,QAAV,KA2EJC,GAFEC,UArEM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMlB,EAAe,EAAfA,SACpBmB,EAAYD,EAAKE,KAAKC,aAAanB,MACnCoB,EAAQJ,EAAKK,kBAAkBC,MAErC,OACI,kBAAC,EAAD,CAAQxB,SAAUA,EAAUE,MAAOiB,GAC/B,kBAACM,EAAA,EAAD,CAAUvB,MAAM,KAEhB,kBAACO,EAAD,iBAICa,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJzB,EAAQyB,EAAKC,YAAY1B,OAASyB,EAAKE,OAAOC,KAC9CC,EAASJ,EAAKC,YAAYG,OAEhC,OACI,kBAACjB,EAAD,CAAakB,IAAKL,EAAKE,OAAOC,MAC1B,gCACI,kBAAClB,EAAD,KACI,kBAAC,IAAD,CAAMtB,GAAIqC,EAAKE,OAAOC,MAAO5B,IAEjC,kBAAC,EAAD,KAAWyB,EAAKC,YAAYK,KAA5B,cAA6CF,IAGjD,iCACI,uBACIG,wBAAyB,CACrBC,OACIR,EAAKC,YAAYQ,aACjBT,EAAKU,gBAQjC,6BAEA,kBAAC5B,EAAD,kBAIA,4BACI,mCACA,sCACA,4CAGJ,6BAEA,kBAACA,EAAD,eAIA,4BACI,2CACA,2CACA,6CACA,0CAGJ,+BAQU","file":"component---src-pages-index-js-addb26ed6395ee644b5a.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport SiteContainer from './SiteContainer';\n\nconst Header = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n`;\n\nconst Footer = styled.footer`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n`;\n\nconst MainContainer = styled.div`\n    width: 60vw;\n    max-width: 40rem;\n    margin: 1rem auto;\n`;\n\nconst LargeHeader = () => (\n    <Header>\n        <Link to={`/`}>\n            <img src={require('./nge-logo.svg')}\n                    alt=\"Not Good Enough — Inadequate responses to Inadequate responses\"\n                    width={260}\n                    height={260} />\n        </Link>\n    </Header>\n);\n\nconst RegularHeader = () => (\n    <Header style={{ padding: '2rem' }}>\n        <Link to={`/`}>\n            <img src={require('./nge-logotype.svg')}\n                    alt=\"Not Good Enough — Inadequate responses to Inadequate responses\"\n                    width={200}\n                    height={100} />\n        </Link>\n    </Header>\n);\n\nconst Layout = ({ location, title, children }) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const isRootPath = location.pathname === rootPath;\n\n    return (\n        <SiteContainer>\n            <header>\n                {isRootPath ? (\n                    <LargeHeader />\n                ) : (\n                    <RegularHeader />\n                )}\n            </header>\n            <MainContainer>\n                {children}\n            </MainContainer>\n            <Footer>\n                <img src={require('./nge-banner.svg')} width={234} height={84} />\n            </Footer>\n        </SiteContainer>\n    );\n}\n\nexport default Layout;\n","import styled from 'styled-components';\nimport { fontImport, fontBody, fontDisplay } from '../styles/fonts';\nimport * as colors from '../styles/colors';\n\nconst PostDate = styled.div`\n    ${fontBody};\n    font-size: 0.8rem;\n    text-transform: uppercase;\n    margin: 0.3rem 0;\n    color: ${colors.foregroundSecondary};\n`;\n\nexport default PostDate;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { fontDisplay } from '../styles/fonts';\n\nimport Layout from '../components/Layout';\nimport MetaTags from '../components/MetaTags';\nimport PostDate from '../components/PostDate';\n\nconst Title = styled.h1`\n    ${fontDisplay}\n    margin: 1rem 0;\n`;\n\nconst ListingTitle = styled.h3`\n    ${fontDisplay}\n    font-size: 1.2rem;\n`;\n\nconst ListingItem = styled.article`\n    margin-bottom: 1rem;\n`;\n\nconst PodcastIndex = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <MetaTags title=\"\" />\n\n            <Title>\n                Episodes\n            </Title>\n\n            {posts.map(({ node }) => {\n                const title = node.frontmatter.title || node.fields.slug;\n                const number = node.frontmatter.number;\n\n                return (\n                    <ListingItem key={node.fields.slug}>\n                        <header>\n                            <ListingTitle>\n                                <Link to={node.fields.slug}>{title}</Link>\n                            </ListingTitle>\n                            <PostDate>{node.frontmatter.date} • Episode {number}</PostDate>\n                        </header>\n\n                        <section>\n                            <p\n                                dangerouslySetInnerHTML={{\n                                    __html:\n                                        node.frontmatter.description ||\n                                        node.excerpt,\n                                }}\n                            />\n                        </section>\n                    </ListingItem>\n                );\n            })}\n\n            <hr />\n\n            <Title>\n                Subscribe\n            </Title>\n\n            <ul>\n                <li>RSS</li>\n                <li>iTunes</li>\n                <li>PocketCasts</li>\n            </ul>\n\n            <hr />\n\n            <Title>\n                Follow\n            </Title>\n\n            <ul>\n                <li>@notgoodpod</li>\n                <li>@langaround</li>\n                <li>@philosophica</li>\n                <li>@mccclean</li>\n            </ul>\n\n            <hr />\n\n        </Layout>\n    );\n};\n\nexport default PodcastIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        number\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}